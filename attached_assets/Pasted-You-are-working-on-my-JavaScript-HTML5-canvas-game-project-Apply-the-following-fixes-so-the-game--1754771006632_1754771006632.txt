You are working on my JavaScript/HTML5 canvas game project.  
Apply the following fixes so the game no longer shows a black screen when new assets are uploaded:

1. Add these globals near the top of the JS file:
------------------------------------------------
let READY = false;           // blocks game loop until assets are ready
let LOAD_MSG = 'Loading…';   // shows on screen while loading
window.addEventListener('error', e => console.error('Runtime error:', e.message));

2. In the boot() function, set READY only after assets are fully loaded:
-------------------------------------------------------------------------
async function boot(){
  try {
    SPR = await loadSprites(SPRITE_DEF);
    bgFar=SPR.bg.far; bgMid=SPR.bg.mid; bgNear=SPR.bg.near; fgRail=SPR.bg.rail;

    // Build seamless parallax tiles if available
    if (bgFar || bgMid || bgNear) {
      const FAR_CROP_TOP = 0;
      const FAR_CROP_H   = Math.floor((bgFar?.height || 0) * 0.70) || (bgFar?.height || 0);
      window.BGTiles = {
        far : makeSeamlessTile(bgFar,  { cropY: FAR_CROP_TOP,  cropH: FAR_CROP_H,  mode:'mirror' }),
        mid : makeSeamlessTile(bgMid,  { cropY: 0, cropH: bgMid?.height || 0,     mode:'mirror' }),
        near: makeSeamlessTile(bgNear, { cropY: 0, cropH: bgNear?.height || 0,    mode:'mirror' }),
        rail: fgRail
      };
    }

    player = makePlayer();
    setAnim(player,'player','idle');
    for(let x=0;x<CHUNK*4;x+=CHUNK) genChunk(x);

    gameState='playing';
    READY = true; // all good, start the game
  } catch (err) {
    console.error(err);
    LOAD_MSG = 'Load failed (check console)';
  }
}
boot();

3. Gate the main loop until READY:
-----------------------------------
function loop(now){
  const dt = loop.t ? now - loop.t : 16; loop.t = now;

  if (!READY) {
    ctx.fillStyle = '#000'; ctx.fillRect(0,0,VW,VH);
    drawSky();
    ctx.fillStyle = '#cfd6df';
    ctx.fillText(LOAD_MSG, VW/2 - 20, VH/2);
    blit();
    requestAnimationFrame(loop);
    return;
  }

  if (gameState==='playing') update(dt, now);

  ctx.fillStyle = '#000'; ctx.fillRect(0,0,VW,VH);
  if (window.BGTiles?.far || bgFar) { drawParallax(); } else { drawSky(); }
  drawTiles(); drawTerminals(); drawEntities(now); drawUI(now);
  blit(); drawOverlay(now);

  requestAnimationFrame(loop);
}
requestAnimationFrame(loop);

4. Make drawUI robust when assets are missing:
-----------------------------------------------
  let y = VH - 10;
  const warn = msg => { ctx.fillStyle='rgba(0,0,0,.6)'; ctx.fillRect(2,y-7,VW-4,9); ctx.fillStyle='#ffb36a'; ctx.fillText(msg,6,y-6); y-=10; };
  if (typeof SPR !== 'undefined' && SPR) {
    if (!SPR.player?.anim?.idle?.img) warn('Missing player_* PNGs');
    if (!SPR.robot?.anim?.idle?.img)  warn('Missing robot_* PNGs');
    if (!SPR.drone?.anim?.idle?.img)  warn('Missing drone_* PNGs');
  }
  if (!bgFar) warn('Missing: assets/01_bg_far.png (using gradient sky)');

5. Verify file paths match exactly (case-sensitive on Replit).  
Check the browser console (F12) if the black screen persists—errors will now be logged clearly.

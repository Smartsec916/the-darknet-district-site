
<!DOCTYPE html>
<html lang="en">
<head>
  <base href="/blackout-protocol/">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>Blackout Protocol â€” Game Shop</title>
  <style>
    :root { --frame-w: 960px; }
    html,body{margin:0;background:#000;color:#cfd6df;font-family:monospace;overflow:hidden;}
    #gameContainer{position:relative;width:100%;max-width:var(--frame-w);margin:0 auto;aspect-ratio:4/3;background:#000;border:2px solid #5c5c5c;}
    canvas{position:absolute;inset:0;display:block;image-rendering:pixelated;image-rendering:crisp-edges;}
    
    .shop-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.9);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 10;
      padding: 20px;
      box-sizing: border-box;
    }
    
    .shop-title {
      color: #00ff9d;
      font-size: 24px;
      margin-bottom: 20px;
      text-shadow: 0 0 10px #00ff9d;
      text-align: center;
    }
    
    .shop-stats {
      color: #cfd6df;
      margin-bottom: 30px;
      text-align: center;
      font-size: 16px;
    }
    
    .shop-items {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      max-width: 600px;
      margin-bottom: 30px;
    }
    
    .shop-item {
      background: rgba(0, 255, 157, 0.1);
      border: 2px solid #00ff9d;
      padding: 15px;
      border-radius: 8px;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s;
    }
    
    .shop-item:hover {
      background: rgba(0, 255, 157, 0.2);
      box-shadow: 0 0 15px rgba(0, 255, 157, 0.3);
    }
    
    .shop-item.disabled {
      opacity: 0.5;
      cursor: not-allowed;
      border-color: #666;
    }
    
    .item-name {
      color: #00ff9d;
      font-weight: bold;
      margin-bottom: 5px;
    }
    
    .item-description {
      color: #cfd6df;
      font-size: 12px;
      margin-bottom: 10px;
    }
    
    .item-price {
      color: #ffd95e;
      font-weight: bold;
    }
    
    .shop-buttons {
      display: flex;
      gap: 20px;
    }
    
    .shop-button {
      background: #00ff9d;
      color: #000;
      border: none;
      padding: 12px 24px;
      border-radius: 6px;
      cursor: pointer;
      font-family: monospace;
      font-weight: bold;
      transition: all 0.3s;
    }
    
    .shop-button:hover {
      background: #00cc7a;
      box-shadow: 0 0 10px #00ff9d;
    }
    
    .shop-button.secondary {
      background: #666;
      color: #cfd6df;
    }
    
    .shop-button.secondary:hover {
      background: #888;
    }
  </style>
</head>
<body>
<div id="gameContainer">
  <canvas id="gameCanvas"></canvas>
  
  <div class="shop-overlay">
    <div class="shop-title">ðŸ›’ DARKNET DISTRICT SHOP ðŸ›’</div>
    <div class="shop-title" style="font-size: 18px; margin-bottom: 10px;">LEVEL 2</div>
    
    <div class="shop-stats">
      <div>Health: <span id="playerHealth">100</span>% (RESTORED)</div>
      <div>BTC Available: <span id="playerBTC">0</span></div>
      <div>Score: <span id="playerScore">0</span></div>
    </div>
    
    <div class="shop-items">
      <div class="shop-item" data-item="health" data-price="5">
        <div class="item-name">Health Pack</div>
        <div class="item-description">Restore 25 HP instantly</div>
        <div class="item-price">5 BTC</div>
      </div>
      
      <div class="shop-item" data-item="speed" data-price="10">
        <div class="item-name">Speed Boost</div>
        <div class="item-description">Increase movement speed</div>
        <div class="item-price">10 BTC</div>
      </div>
      
      <div class="shop-item" data-item="jump" data-price="8">
        <div class="item-name">Jump Enhancer</div>
        <div class="item-description">Higher jumps for better mobility</div>
        <div class="item-price">8 BTC</div>
      </div>
      
      <div class="shop-item" data-item="armor" data-price="15">
        <div class="item-name">Nano Armor</div>
        <div class="item-description">Reduce damage taken by 25%</div>
        <div class="item-price">15 BTC</div>
      </div>
      
      <div class="shop-item" data-item="coins" data-price="3">
        <div class="item-name">Coin Magnet</div>
        <div class="item-description">Attract coins from greater distance</div>
        <div class="item-price">3 BTC</div>
      </div>
      
      <div class="shop-item" data-item="hacker" data-price="12">
        <div class="item-name">Advanced EMP</div>
        <div class="item-description">Longer hack duration</div>
        <div class="item-price">12 BTC</div>
      </div>
    </div>
    
    <div class="shop-buttons">
      <button class="shop-button" onclick="continueGame()">Continue to Next Level</button>
      <button class="shop-button secondary" onclick="returnToGame()">Return to Game</button>
    </div>
  </div>
</div>

<script>
// Get player stats from URL parameters or localStorage
const urlParams = new URLSearchParams(window.location.search);
let playerBTC = parseInt(urlParams.get('btc')) || parseInt(localStorage.getItem('playerBTC')) || 0;
let playerScore = parseInt(urlParams.get('score')) || parseInt(localStorage.getItem('playerScore')) || 0;
let playerHealth = 100; // Always reset to 100 in shop

// Player upgrades
let playerUpgrades = JSON.parse(localStorage.getItem('playerUpgrades')) || {
  speedBoost: false,
  jumpBoost: false,
  armor: false,
  coinMagnet: false,
  advancedHack: false
};

// Update display
document.getElementById('playerBTC').textContent = playerBTC;
document.getElementById('playerScore').textContent = playerScore;
document.getElementById('playerHealth').textContent = playerHealth;

// Update item availability
function updateShopItems() {
  const items = document.querySelectorAll('.shop-item');
  items.forEach(item => {
    const price = parseInt(item.dataset.price);
    const itemType = item.dataset.item;
    
    if (playerBTC < price) {
      item.classList.add('disabled');
    } else {
      item.classList.remove('disabled');
    }
    
    // Mark already purchased items
    if (itemType === 'speed' && playerUpgrades.speedBoost) item.classList.add('disabled');
    if (itemType === 'jump' && playerUpgrades.jumpBoost) item.classList.add('disabled');
    if (itemType === 'armor' && playerUpgrades.armor) item.classList.add('disabled');
    if (itemType === 'coins' && playerUpgrades.coinMagnet) item.classList.add('disabled');
    if (itemType === 'hacker' && playerUpgrades.advancedHack) item.classList.add('disabled');
  });
}

// Handle item purchases
document.querySelectorAll('.shop-item').forEach(item => {
  item.addEventListener('click', function() {
    if (this.classList.contains('disabled')) return;
    
    const price = parseInt(this.dataset.price);
    const itemType = this.dataset.item;
    
    if (playerBTC >= price) {
      playerBTC -= price;
      
      switch(itemType) {
        case 'health':
          playerHealth = Math.min(100, playerHealth + 25);
          break;
        case 'speed':
          playerUpgrades.speedBoost = true;
          break;
        case 'jump':
          playerUpgrades.jumpBoost = true;
          break;
        case 'armor':
          playerUpgrades.armor = true;
          break;
        case 'coins':
          playerUpgrades.coinMagnet = true;
          break;
        case 'hacker':
          playerUpgrades.advancedHack = true;
          break;
      }
      
      // Update display
      document.getElementById('playerBTC').textContent = playerBTC;
      document.getElementById('playerHealth').textContent = playerHealth;
      
      // Save to localStorage
      localStorage.setItem('playerBTC', playerBTC.toString());
      localStorage.setItem('playerScore', playerScore.toString());
      localStorage.setItem('playerHealth', playerHealth.toString());
      localStorage.setItem('playerUpgrades', JSON.stringify(playerUpgrades));
      
      updateShopItems();
      
      // Visual feedback
      this.style.background = 'rgba(0, 255, 157, 0.4)';
      setTimeout(() => {
        this.style.background = 'rgba(0, 255, 157, 0.1)';
      }, 200);
    }
  });
});

function continueGame() {
  // Save final stats and return to main game for level 2+
  localStorage.setItem('playerBTC', playerBTC.toString());
  localStorage.setItem('playerScore', playerScore.toString());
  localStorage.setItem('playerHealth', playerHealth.toString());
  localStorage.setItem('playerUpgrades', JSON.stringify(playerUpgrades));
  localStorage.setItem('gameLevel', '2');
  
  window.location.href = './index.html?level=2';
}

function returnToGame() {
  window.location.href = './index.html';
}

updateShopItems();
</script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <base href="/blackout-protocol/">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Byte Bazaar — Add-Men</title>
  <style>
    :root{--accent:#6fc2ff;--accent2:#7dff9a;--ink:#cfd6df;--dim:#8a94a6;--bg:#0b0f16;--panel:#0f141f;--w:920px}
    html,body{margin:0;height:100%;background:radial-gradient(100% 140% at 50% 0%,#0b0f16 0%,#0a0f1a 50%,#070b13 100%);color:var(--ink);font-family:ui-monospace,Menlo,Consolas,monospace}
    .wrap{max-width:var(--w);margin:0 auto;padding:18px}
    .hdr{display:flex;align-items:center;gap:10px;color:var(--accent);letter-spacing:.8px}
    .sign{font-weight:700}
    .card{background:linear-gradient(180deg,rgba(22,28,40,.85),rgba(9,12,18,.85));border:1px solid #263248;border-radius:10px;overflow:hidden;box-shadow:0 0 40px rgba(1,10,30,.35) inset,0 12px 50px rgba(20,40,80,.25)}
    .imgbox{display:flex;justify-content:center;padding:14px 14px 6px}
    .imgbox img{image-rendering:pixelated;width:min(680px,96vw);max-width:100%;border:1px solid #33415f;background:#0b0f16}
    .term{padding:12px 14px 18px;border-top:1px solid #25314a;background:repeating-linear-gradient(180deg,#0d1320 0 2px,#0c1220 2px 4px);position:relative}
    .crt::after{content:"";position:absolute;inset:0;background:linear-gradient(to bottom,rgba(255,255,255,.03),rgba(0,0,0,0) 60%);pointer-events:none}
    .line{white-space:pre-wrap;line-height:1.25em}
    .caret{display:inline-block;width:7px;margin-left:2px;background:var(--accent);animation:blink .9s steps(1) infinite}
    @keyframes blink{50%{opacity:0}}
    .meta{display:flex;justify-content:space-between;gap:12px;color:var(--dim);font-size:12px;padding:10px 2px 0}
    .btns{display:flex;flex-wrap:wrap;gap:8px;margin-top:10px;justify-content:center}
    button{background:var(--panel);border:1px solid #2b354a;color:var(--ink);padding:8px 10px;border-radius:8px;cursor:pointer;letter-spacing:.5px}
    button:hover{border-color:var(--accent);box-shadow:0 0 0 2px rgba(111,194,255,.1)}
    .own{color:#8cffc8}.warn{color:#ffb36a}.err{color:#ff8a8a}.ok{color:#7dff9a}
    .small{font-size:12px;color:var(--dim)}
  </style>
</head>
<body>
<div class="wrap">
  <div class="hdr">
    <div class="sign">BYTE BAZAAR</div>
    <div class="small">— proprietor: Add-Men</div>
  </div>

  <div class="card">
    <div class="imgbox">
      <img id="keeper" alt="Add-Men, shopkeeper" src="assets/shop_addmen.png">
    </div>
    <div id="term" class="term crt"></div>
    <div class="meta">
      <div>Tip: press number keys [1-6] to buy, [0] or [L] to leave. Space = skip typing.</div>
      <div id="status">…</div>
    </div>
  </div>

  <div class="btns" id="quick"></div>
</div>

<script>
const HYPER_RELOAD_TAG = 'rev=20250811-030336'; // replaced by bump step
document.getElementById('keeper').src = 'assets/shop_addmen.png?'+HYPER_RELOAD_TAG;

(function(){
  const qs = new URLSearchParams(location.search);
  const btcQS   = parseInt(qs.get('btc')||'');
  const scoreQS = parseInt(qs.get('score')||'');
  const levelQS = parseInt(qs.get('level')||'');

  const getNum=(k,d=0)=>{const n=parseInt(localStorage.getItem(k)||'');return Number.isFinite(n)?n:d;}
  con

set -euo pipefail
cd ~/workspace 2>/dev/null || true

ASSETS="blackout-protocol/assets"
GAME="blackout-protocol/index.html"
SHOP="blackout-protocol/game-shop.html"
STAMP="$(date +%Y%m%d-%H%M%S)"

mkdir -p "$ASSETS"

# 0) Move/copy your new art in if it exists anywhere nearby (case-safe)
move_if_found(){ for p in "$@"; do [ -s "$p" ] && { cp -f "$p" "$2"; echo "✓ $2 <- $p"; return; }; done; }

# backgrounds
move_if_found attached_assets/01_bg_far.png  01_bg_far.png  "$ASSETS/01_bg_far.png"
move_if_found attached_assets/01_bg_near.png 01_bg_near.png "$ASSETS/01_bg_near.png"

# coins/door/ledge/terminal/platform (only copy if target missing)
[ -s "$ASSETS/btc_glow.png" ]            || move_if_found attached_assets/btc_glow*.png "$ASSETS/btc_glow.png"
[ -s "$ASSETS/shop_door_neon.png" ]      || move_if_found attached_assets/shop_door*.png "$ASSETS/shop_door_neon.png"
[ -s "$ASSETS/ledge_tile.png" ]          || move_if_found attached_assets/ledge_tile*.png "$ASSETS/ledge_tile.png"
[ -s "$ASSETS/hacker_terminal.png" ]     || move_if_found attached_assets/hacker_terminal*.png "$ASSETS/hacker_terminal.png" "$ASSETS/hacking_terminal*.png"
# platform art: if you don't have a separate sprite yet, alias to the ledge_tile so draw still works
if [ ! -s "$ASSETS/platform_industrial.png" ] && [ -s "$ASSETS/ledge_tile.png" ]; then
  cp -f "$ASSETS/ledge_tile.png" "$ASSETS/platform_industrial.png"
  echo "✓ aliased platform_industrial.png -> ledge_tile.png"
fi

# optional rail overlay art (you can replace later with a pretty file)
[ -s "$ASSETS/platform_rail.png" ] || cp -f "$ASSETS/ledge_tile.png" "$ASSETS/platform_rail.png" 2>/dev/null || true

# 1) Backups
cp -f "$GAME" "$GAME.bak-$STAMP"
cp -f "$SHOP" "$SHOP.bak-$STAMP"

# 2) Bump cache-bust tag (HYPER_RELOAD_TAG) in both pages or inject it if missing
bump_cache(){
  local f="$1"
  if grep -q "const HYPER_RELOAD_TAG" "$f"; then
    sed -i -E "s/const HYPER_RELOAD_TAG *= *'rev=[^']+';/const HYPER_RELOAD_TAG = 'rev=20250811-030336';/" "$f"
  else
    # inject just before the first <script> open
    sed -i "0,/<script>/{s/<script>/<script>\nconst HYPER_RELOAD_TAG = 'rev=20250811-030336';/}" "$f"
  fi
}
bump_cache "$GAME"
bump_cache "$SHOP"

# 3) Install runtime overrides in GAME (idempotent): stretch ledges, rails-on-top, clearer HUD
if ! grep -q "/* STRETCH_PLATFORMS_AND_RAIL_OVERLAY */" "$GAME"; then
  cat >> "$GAME" <<'JS'

<!-- /* STRETCH_PLATFORMS_AND_RAIL_OVERLAY */ -->
<script>
(function(){
  // 3a) Stretch platforms (single-piece look instead of tiling)
  const _drawTiles = window.drawTiles;
  window.drawTiles = function(){
    for(const p of (window.platforms||[])){
      const sx = (p.x - (window.cameraX||0))|0;
      if(sx + p.w < 0 || sx > (window.VW||256)) continue;
      const TILE = window.TILE||16, VH = window.VH||240;
      const useIndustrial = p.y < VH - TILE && window.platformImg && window.platformImg.complete;
      const tileImg = useIndustrial ? window.platformImg : window.ledgeImg;

      if(tileImg && tileImg.complete && tileImg.naturalWidth>0){
        // draw only one slice stretched to full width
        const srcW = Math.min(TILE, tileImg.naturalWidth), srcH = Math.min(TILE, tileImg.naturalHeight);
        window.ctx.drawImage(tileImg, 0, 0, srcW, srcH, sx, p.y|0, p.w, TILE);
      }else{
        // fallback box
        window.ctx.fillStyle='#3a3f47'; window.ctx.fillRect(sx|0,p.y|0,p.w,TILE);
        window.ctx.fillStyle='#98a0b0'; window.ctx.fillRect(sx|0,p.y|0,p.w,1);
      }
    }
  };

  // 3b) Rails overlay drawn ABOVE the player (use platform_rail.png if present)
  let platformRailImg = null;
  (async function(){
    // prefer a dedicated rail art; fallback to ledge img
    const pick = (window.SPRITE_DEF && window.SPRITE_DEF.platformTop) || ('assets/platform_rail.png?'+(window.HYPER_RELOAD_TAG||''));
    try{
      const i = new Image(); i.onload=()=>{platformRailImg=i;}; i.src = pick;
    }catch(e){}
  })();

  function drawRailsOnTop(){
    if(!platformRailImg || !platformRailImg.complete) return;
    const TILE = window.TILE||16, VH = window.VH||240, VW = window.VW||256, camX = window.cameraX||0;
    const railH = Math.min(14, TILE);
    for(const p of (window.platforms||[])){
      if(p.y >= VH - TILE) continue; // only floating
      const sx = (p.x - camX)|0;
      if(sx + p.w < 0 || sx > VW) continue;
      window.ctx.drawImage(platformRailImg, 0, 0, TILE, railH, sx, p.y - railH, p.w, railH);
    }
  }

  // 3c) Hook rails to draw after entities
  const _drawEntities = window.drawEntities;
  window.drawEntities = function(now){
    _drawEntities && _drawEntities(now);
    drawRailsOnTop();
  };

  // 3d) Clearer HUD bar
  const _drawUI = window.drawUI;
  window.drawUI = function(now){
    const VW = window.VW||256, VH = window.VH||240;
    // darker strip for readability
    window.ctx.fillStyle='rgba(0,0,0,0.78)'; window.ctx.fillRect(0,0,VW,18);
    _drawUI && _drawUI(now);
    // tiny text glow
    window.ctx.save();
    window.ctx.globalAlpha = 0.15;
    window.ctx.fillStyle = '#000'; window.ctx.fillRect(0,18,VW,1);
    window.ctx.restore();
  };
})();
</script>
JS
fi

# 4) Make ledges fewer & wider if our knobs aren’t there yet (safe no-op if already patched)
sed -i -E "s/const pc *= *[0-9+().| ]+/const pc=1+((Math.random()*2)|0)/" "$GAME" || true
sed -i -E "s/const pw *= *TILE\*[^;]+/const pw=TILE*(8+((Math.random()*8)|0))/" "$GAME" || true

# 5) Rebuild SHOP page JS clean (removes stray escapes)
cat > "$SHOP" <<'HTML'
<!DOCTYPE html>
<html lang="en">
<head>
  <base href="/blackout-protocol/">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Byte Bazaar — Add-Men</title>
  <style>
    :root{--accent:#6fc2ff;--accent2:#7dff9a;--ink:#cfd6df;--dim:#8a94a6;--bg:#0b0f16;--panel:#0f141f;--w:920px}
    html,body{margin:0;height:100%;background:radial-gradient(100% 140% at 50% 0%,#0b0f16 0%,#0a0f1a 50%,#070b13 100%);color:var(--ink);font-family:ui-monospace,Menlo,Consolas,monospace}
    .wrap{max-width:var(--w);margin:0 auto;padding:18px}
    .hdr{display:flex;align-items:center;gap:10px;color:var(--accent);letter-spacing:.8px}
    .sign{font-weight:700}
    .card{background:linear-gradient(180deg,rgba(22,28,40,.85),rgba(9,12,18,.85));border:1px solid #263248;border-radius:10px;overflow:hidden;box-shadow:0 0 40px rgba(1,10,30,.35) inset,0 12px 50px rgba(20,40,80,.25)}
    .imgbox{display:flex;justify-content:center;padding:14px 14px 6px}
    .imgbox img{image-rendering:pixelated;width:min(680px,96vw);max-width:100%;border:1px solid #33415f;background:#0b0f16}
    .term{padding:12px 14px 18px;border-top:1px solid #25314a;background:repeating-linear-gradient(180deg,#0d1320 0 2px,#0c1220 2px 4px);position:relative}
    .crt::after{content:"";position:absolute;inset:0;background:linear-gradient(to bottom,rgba(255,255,255,.03),rgba(0,0,0,0) 60%);pointer-events:none}
    .line{white-space:pre-wrap;line-height:1.25em}
    .caret{display:inline-block;width:7px;margin-left:2px;background:var(--accent);animation:blink .9s steps(1) infinite}
    @keyframes blink{50%{opacity:0}}
    .meta{display:flex;justify-content:space-between;gap:12px;color:var(--dim);font-size:12px;padding:10px 2px 0}
    .btns{display:flex;flex-wrap:wrap;gap:8px;margin-top:10px;justify-content:center}
    button{background:var(--panel);border:1px solid #2b354a;color:var(--ink);padding:8px 10px;border-radius:8px;cursor:pointer;letter-spacing:.5px}
    button:hover{border-color:var(--accent);box-shadow:0 0 0 2px rgba(111,194,255,.1)}
    .own{color:#8cffc8}.warn{color:#ffb36a}.err{color:#ff8a8a}.ok{color:#7dff9a}
    .small{font-size:12px;color:var(--dim)}
  </style>
</head>
<body>
<div class="wrap">
  <div class="hdr">
    <div class="sign">BYTE BAZAAR</div>
    <div class="small">— proprietor: Add-Men</div>
  </div>

  <div class="card">
    <div class="imgbox">
      <img id="keeper" alt="Add-Men, shopkeeper" src="assets/shop_addmen.png">
    </div>
    <div id="term" class="term crt"></div>
    <div class="meta">
      <div>Tip: press number keys [1-6] to buy, [0] or [L] to leave. Space = skip typing.</div>
      <div id="status">…</div>
    </div>
  </div>

  <div class="btns" id="quick"></div>
</div>

<script>
const HYPER_RELOAD_TAG = 'rev=20250811-030336'; // replaced by bump step
document.getElementById('keeper').src = 'assets/shop_addmen.png?'+HYPER_RELOAD_TAG;

(function(){
  const qs = new URLSearchParams(location.search);
  const btcQS   = parseInt(qs.get('btc')||'');
  const scoreQS = parseInt(qs.get('score')||'');
  const levelQS = parseInt(qs.get('level')||'');

  const getNum=(k,d=0)=>{const n=parseInt(localStorage.getItem(k)||'');return Number.isFinite(n)?n:d;}
  const getObj=(k)=>{try{return JSON.parse(localStorage.getItem(k)||'{}')}catch(e){return {}};}
  const setObj=(k,v)=>localStorage.setItem(k,JSON.stringify(v));

  let BTC   = Number.isFinite(btcQS)?btcQS:getNum('playerBTC',0);
  let SCORE = Number.isFinite(scoreQS)?scoreQS:getNum('playerScore',0);
  let LVL   = Number.isFinite(levelQS)?levelQS:getNum('gameLevel',1);
  let HP    = getNum('playerHealth',100);
  let UPG   = getObj('playerUpgrades');

  const CATALOG=[
    {id:'speedBoost',   label:'Speed Boost',    desc:'run like rumor',       cost:12, type:'flag'},
    {id:'jumpBoost',    label:'Jump Boost',     desc:'reach the high rails', cost:12, type:'flag'},
    {id:'armor',        label:'Armor Plating',  desc:'take less damage',     cost:15, type:'flag'},
    {id:'coinMagnet',   label:'Coin Magnet',    desc:'pull creds from air',  cost:10, type:'flag'},
    {id:'advancedHack', label:'Advanced EMP',   desc:'longer hack pulse',    cost:20, type:'flag'},
    {id:'heal',         label:'Trauma Gel',     desc:'patch to 100 HP',      cost:5,  type:'heal'}
  ];

  const term = document.getElementById('term');
  const status = document.getElementById('status');
  let skip=false;

  function caret(){const c=document.createElement('span');c.className='caret';return c;}
  function writeLine(text){const p=document.createElement('div');p.className='line';p.textContent=text;term.appendChild(p);term.scrollTop=term.scrollHeight;return p;}
  async function type(text,spd=16){
    const p=document.createElement('div');p.className='line';term.appendChild(p);const c=caret();let out='';
    for(let i=0;i<text.length;i++){ if(skip){ out=text; break; } out+=text[i]; p.textContent=out; p.appendChild(c); term.scrollTop=term.scrollHeight; await new Promise(r=>setTimeout(r,spd)); }
    p.textContent=out; term.scrollTop=term.scrollHeight;
  }

  const fmtBal=()=>`BTC:${BTC}  HP:${HP}  LVL:${LVL}  SC:${SCORE}`;
  const setStatus=(s)=>status.textContent=s;
  const owned =(id)=>!!UPG[id];
  const can   =(c)=>BTC>=c;

  async function intro(){
    term.innerHTML='';
    await type('【Add-Men】 Byte Bazaar terminal online…');
    await type('Welcome back, runner.');
    await type(`Balance → ${fmtBal()}`);
    await type('What can I slot for you?');
    await menu();
  }

  const lineFor=(it,idx)=>`[${idx}] ${it.label} — ${it.desc}  (${it.cost} BTC)${(it.type==='flag'&&owned(it.id))?' [OWNED]':''}`;

  async function menu(){
    for(let i=0;i<CATALOG.length;i++){ await type(lineFor(CATALOG[i], i+1)); }
    await type('[0] Leave shop');
    ensureButtons(); setStatus(fmtBal());
  }

  function ensureButtons(){
    const q=document.getElementById('quick'); if(q.dataset.ready) return; q.dataset.ready="1";
    CATALOG.forEach((it,i)=>{const b=document.createElement('button'); b.textContent=`${i+1}. ${it.label}`; b.onclick=()=>attemptPurchase(i+1); q.appendChild(b);});
    const leave=document.createElement('button'); leave.textContent='0. Leave shop'; leave.onclick=leaveShop; q.appendChild(leave);
  }

  function save(){
    setObj('playerUpgrades',UPG);
    localStorage.setItem('playerBTC', String(BTC));
    localStorage.setItem('playerScore', String(SCORE));
    localStorage.setItem('gameLevel', String(LVL));
    localStorage.setItem('playerHealth', String(HP));
  }

  function toast(msg,cls='ok'){ const p=writeLine(msg); p.classList.add(cls); setStatus(fmtBal()); }

  function attemptPurchase(n){
    const idx=n-1; if(n===0) return leaveShop(); if(idx<0||idx>=CATALOG.length) return;
    const it=CATALOG[idx];
    if(it.type==='flag'){
      if(owned(it.id)) return toast(`Already installed: ${it.label}`,'own');
      if(!can(it.cost)) return toast(`Insufficient funds for ${it.label}. Need ${it.cost} BTC.`,'err');
      BTC-=it.cost; UPG[it.id]=true; save(); toast(`Installed: ${it.label}. (-${it.cost} BTC)`); writeLine(lineFor(it, idx+1)).classList.add('own');
    }else{
      if(!can(it.cost)) return toast(`Insufficient funds for ${it.label}. Need ${it.cost} BTC.`,'err');
      BTC-=it.cost; HP=100; save(); toast(`Vitals topped up to 100. (-${it.cost} BTC)`);
    }
  }

  function leaveShop(){
    LVL=Math.max(LVL,2); save(); toast('Gate unlocked. See you out there, runner.','warn');
    setTimeout(()=>{ location.href='./index.html'; }, 450);
  }

  window.addEventListener('keydown',(e)=>{
    if(e.code==='Space') skip=true;
    if(e.key>='0'&&e.key<='9') attemptPurchase(parseInt(e.key,10));
    if(e.key==='l'||e.key==='L') leaveShop();
  });

  intro();
})();
</script>
</body>
</html>
